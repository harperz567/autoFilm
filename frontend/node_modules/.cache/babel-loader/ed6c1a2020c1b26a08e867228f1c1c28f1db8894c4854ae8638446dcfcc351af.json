{"ast":null,"code":"// User related types\n\n// Project related types\n\n// Storyboard related types\n\nexport let ShotType = /*#__PURE__*/function (ShotType) {\n  ShotType[\"EXTREME_WIDE\"] = \"extreme_wide\";\n  ShotType[\"WIDE\"] = \"wide\";\n  ShotType[\"MEDIUM_WIDE\"] = \"medium_wide\";\n  ShotType[\"MEDIUM\"] = \"medium\";\n  ShotType[\"MEDIUM_CLOSE\"] = \"medium_close\";\n  ShotType[\"CLOSE_UP\"] = \"close_up\";\n  ShotType[\"EXTREME_CLOSE_UP\"] = \"extreme_close_up\";\n  ShotType[\"INSERT\"] = \"insert\";\n  ShotType[\"CUTAWAY\"] = \"cutaway\";\n  ShotType[\"OVER_SHOULDER\"] = \"over_shoulder\";\n  ShotType[\"TWO_SHOT\"] = \"two_shot\";\n  ShotType[\"MASTER_SHOT\"] = \"master_shot\";\n  return ShotType;\n}({});\nexport let CameraAngle = /*#__PURE__*/function (CameraAngle) {\n  CameraAngle[\"EYE_LEVEL\"] = \"eye_level\";\n  CameraAngle[\"HIGH_ANGLE\"] = \"high_angle\";\n  CameraAngle[\"LOW_ANGLE\"] = \"low_angle\";\n  CameraAngle[\"BIRD_EYE\"] = \"bird_eye\";\n  CameraAngle[\"WORM_EYE\"] = \"worm_eye\";\n  CameraAngle[\"DUTCH_ANGLE\"] = \"dutch_angle\";\n  CameraAngle[\"OVER_SHOULDER\"] = \"over_shoulder\";\n  CameraAngle[\"POINT_OF_VIEW\"] = \"point_of_view\";\n  return CameraAngle;\n}({});\nexport let TimeOfDay = /*#__PURE__*/function (TimeOfDay) {\n  TimeOfDay[\"DAWN\"] = \"dawn\";\n  TimeOfDay[\"MORNING\"] = \"morning\";\n  TimeOfDay[\"DAY\"] = \"day\";\n  TimeOfDay[\"AFTERNOON\"] = \"afternoon\";\n  TimeOfDay[\"EVENING\"] = \"evening\";\n  TimeOfDay[\"NIGHT\"] = \"night\";\n  TimeOfDay[\"LATE_NIGHT\"] = \"late_night\";\n  return TimeOfDay;\n}({});\n\n// API response types\n\n// File upload types\n\n// Conversion types\n\n// Export types\n\n// Cache types (for future Redis implementation)\n\n// Error types\n\n// UI State types\n\n// Form types\n\n// Navigation types","map":{"version":3,"names":["ShotType","CameraAngle","TimeOfDay"],"sources":["/Users/harper/Desktop/scriptboard-project/frontend/src/types/index.ts"],"sourcesContent":["// User related types\nexport interface User {\n  id: string;\n  email: string;\n  username: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n}\n\n// Project related types\nexport interface Project {\n  id: string;\n  name: string;\n  description?: string;\n  scriptContent: string;\n  storyboardData?: StoryboardScene[];\n  createdAt: string;\n  updatedAt: string;\n  userId: string;\n}\n\nexport interface CreateProjectRequest {\n  name: string;\n  description?: string;\n  scriptContent?: string;\n}\n\nexport interface UpdateProjectRequest {\n  name?: string;\n  description?: string;\n  scriptContent?: string;\n}\n\n// Storyboard related types\nexport interface StoryboardScene {\n  id: string;\n  sceneNumber: number;\n  description: string;\n  shotType: ShotType;\n  cameraAngle: CameraAngle;\n  duration: number;\n  notes?: string;\n  characters: string[];\n  location: string;\n  timeOfDay: TimeOfDay;\n  movement?: string;\n  dialogue?: string;\n}\n\nexport enum ShotType {\n  EXTREME_WIDE = 'extreme_wide',\n  WIDE = 'wide',\n  MEDIUM_WIDE = 'medium_wide',\n  MEDIUM = 'medium',\n  MEDIUM_CLOSE = 'medium_close',\n  CLOSE_UP = 'close_up',\n  EXTREME_CLOSE_UP = 'extreme_close_up',\n  INSERT = 'insert',\n  CUTAWAY = 'cutaway',\n  OVER_SHOULDER = 'over_shoulder',\n  TWO_SHOT = 'two_shot',\n  MASTER_SHOT = 'master_shot'\n}\n\nexport enum CameraAngle {\n  EYE_LEVEL = 'eye_level',\n  HIGH_ANGLE = 'high_angle',\n  LOW_ANGLE = 'low_angle',\n  BIRD_EYE = 'bird_eye',\n  WORM_EYE = 'worm_eye',\n  DUTCH_ANGLE = 'dutch_angle',\n  OVER_SHOULDER = 'over_shoulder',\n  POINT_OF_VIEW = 'point_of_view'\n}\n\nexport enum TimeOfDay {\n  DAWN = 'dawn',\n  MORNING = 'morning',\n  DAY = 'day',\n  AFTERNOON = 'afternoon',\n  EVENING = 'evening',\n  NIGHT = 'night',\n  LATE_NIGHT = 'late_night'\n}\n\n// API response types\nexport interface ApiResponse<T> {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface PaginatedResponse<T> {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n}\n\n// File upload types\nexport interface FileUpload {\n  file: File;\n  progress: number;\n  status: 'pending' | 'uploading' | 'success' | 'error';\n  error?: string;\n}\n\n// Conversion types\nexport interface ConversionRequest {\n  projectId: string;\n  scriptContent: string;\n  options?: {\n    shotStyle?: 'cinematic' | 'documentary' | 'commercial';\n    pacing?: 'slow' | 'medium' | 'fast';\n    complexity?: 'simple' | 'standard' | 'complex';\n  };\n}\n\nexport interface ConversionResponse {\n  success: boolean;\n  storyboard: StoryboardScene[];\n  processingTime: number;\n  metadata?: {\n    totalScenes: number;\n    estimatedDuration: number;\n    shotBreakdown: Record<ShotType, number>;\n  };\n}\n\n// Export types\nexport interface ExportRequest {\n  projectId: string;\n  format: 'pdf' | 'excel' | 'word';\n  options?: {\n    includeImages?: boolean;\n    includeNotes?: boolean;\n    template?: string;\n  };\n}\n\nexport interface ExportResponse {\n  success: boolean;\n  downloadUrl: string;\n  filename: string;\n  fileSize: number;\n}\n\n// Cache types (for future Redis implementation)\nexport interface CacheEntry<T> {\n  key: string;\n  value: T;\n  ttl: number;\n  createdAt: string;\n}\n\n// Error types\nexport interface AppError {\n  code: string;\n  message: string;\n  details?: any;\n  timestamp: string;\n}\n\n// UI State types\nexport interface UIState {\n  isLoading: boolean;\n  error?: AppError;\n  success?: string;\n}\n\n// Form types\nexport interface FormField {\n  value: string;\n  error?: string;\n  touched: boolean;\n}\n\nexport interface FormState {\n  [key: string]: FormField;\n}\n\n// Navigation types\nexport interface NavItem {\n  label: string;\n  path: string;\n  icon?: string;\n  isActive?: boolean;\n  requiresAuth?: boolean;\n}"],"mappings":"AAAA;;AAyBA;;AAwBA;;AAgBA,WAAYA,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAepB,WAAYC,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAWvB,WAAYC,SAAS,0BAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;;AAUrB;;AAmBA;;AAQA;;AAsBA;;AAkBA;;AAQA;;AAQA;;AAOA;;AAWA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}