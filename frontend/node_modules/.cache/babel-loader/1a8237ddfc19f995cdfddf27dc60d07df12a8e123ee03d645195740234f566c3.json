{"ast":null,"code":"var _jsxFileName = \"/Users/harper/Desktop/scriptboard-project/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        const token = localStorage.getItem('auth_token');\n        if (token) {\n          const profile = await apiService.getProfile();\n          setUser(profile);\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        localStorage.removeItem('auth_token');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      setIsLoading(true);\n      const authResponse = await apiService.login(credentials);\n      setUser(authResponse.user);\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setIsLoading(true);\n      const authResponse = await apiService.register(userData);\n      setUser(authResponse.user);\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      await apiService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setUser(null);\n      localStorage.removeItem('auth_token');\n    }\n  };\n  const refreshProfile = async () => {\n    try {\n      const profile = await apiService.getProfile();\n      setUser(profile);\n    } catch (error) {\n      console.error('Profile refresh error:', error);\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout,\n    refreshProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","initAuth","token","localStorage","getItem","profile","getProfile","error","console","removeItem","login","credentials","authResponse","register","userData","logout","refreshProfile","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/harper/Desktop/scriptboard-project/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, LoginRequest, RegisterRequest } from '../types';\nimport apiService from '../services/api';\n\ninterface AuthContextType {\n  user: User | null;\n  isLoading: boolean;\n  isAuthenticated: boolean;\n  login: (credentials: LoginRequest) => Promise<void>;\n  register: (userData: RegisterRequest) => Promise<void>;\n  logout: () => Promise<void>;\n  refreshProfile: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        const token = localStorage.getItem('auth_token');\n        if (token) {\n          const profile = await apiService.getProfile();\n          setUser(profile);\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        localStorage.removeItem('auth_token');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (credentials: LoginRequest): Promise<void> => {\n    try {\n      setIsLoading(true);\n      const authResponse = await apiService.login(credentials);\n      setUser(authResponse.user);\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const register = async (userData: RegisterRequest): Promise<void> => {\n    try {\n      setIsLoading(true);\n      const authResponse = await apiService.register(userData);\n      setUser(authResponse.user);\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async (): Promise<void> => {\n    try {\n      await apiService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setUser(null);\n      localStorage.removeItem('auth_token');\n    }\n  };\n\n  const refreshProfile = async (): Promise<void> => {\n    try {\n      const profile = await apiService.getProfile();\n      setUser(profile);\n    } catch (error) {\n      console.error('Profile refresh error:', error);\n      throw error;\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout,\n    refreshProfile,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}